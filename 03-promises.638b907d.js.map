{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,SAC/BC,iBAAiB,UAAUC,IAC9BA,EAAEC,iBACF,MACEC,UAAUC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAEM,cAENC,EAAUC,OAAOL,EAAMM,OAAQD,OAAOJ,EAAKK,OAAQD,OAAOH,EAAOI,QACjET,EAAEM,cAAcI,OAAO,IAYzB,MAAMH,EAAY,CAACI,EAAYC,EAAWP,KACxC,IAAK,IAAIQ,EAAI,EAAGC,EAAQH,EAAYE,GAAKR,EAAQQ,GAAK,EAAGC,GAASF,EAChEG,YACE,KACEC,OAbeC,EAaDJ,EAbWV,EAaRW,EAZDI,KAAKC,SAAW,GAE7BC,QAAQC,QAAQ,C,SAAEJ,E,MAAUd,IAE5BiB,QAAQE,OAAO,C,SAAEL,E,MAAUd,KAS3BoB,MAAK,EAACN,SAAEA,EAAQd,MAAEA,MACjBR,EAAA6B,OAAOC,QAAQ,sBAAsBR,QAAed,MAAW,CAC7DuB,QAAS,MACT,IAEHC,OAAM,EAACV,SAAEA,EAAQd,MAAEA,MAClBR,EAAA6B,OAAOI,QAAQ,oBAAoBX,QAAed,MAAW,CAC3DuB,QAAS,MACT,IAtBd,IAAuBT,EAAUd,CAuBrB,GACNW,EACD","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n\n  onExecute(Number(delay.value), Number(step.value), Number(amount.value));\n  e.currentTarget.reset();\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    return Promise.resolve({ position, delay });\n  } else {\n    return Promise.reject({ position, delay });\n  }\n}\n\nconst onExecute = (firstDelay, delayStep, amount) => {\n  for (let i = 1, delay = firstDelay; i <= amount; i += 1, delay += delayStep) {\n    setTimeout(\n      () =>\n        createPromise(i, delay)\n          .then(({ position, delay }) => {\n            Notify.success(` Fulfilled promise ${position} in ${delay}ms`, {\n              timeout: 2500,\n            });\n          })\n          .catch(({ position, delay }) => {\n            Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n              timeout: 2500,\n            });\n          }),\n      delay\n    );\n  }\n};\n"],"names":["$iQIUW","parcelRequire","document","querySelector","addEventListener","e","preventDefault","elements","delay","step","amount","currentTarget","$47d4ff9957288465$var$onExecute","Number","value","reset","firstDelay","delayStep","i","delay1","setTimeout","$47d4ff9957288465$var$createPromise","position","Math","random","Promise","resolve","reject","then","Notify","success","timeout","catch","failure"],"version":3,"file":"03-promises.638b907d.js.map"}